{"ast":null,"code":"var _jsxFileName = \"/Users/ritessshhh/WebstormProjects/princeton-hackathon/src/Pages/Voices.js\";\nimport React from 'react';\nimport voices from '../Animation/voices.json';\nimport Lottie from \"lottie-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Voices({\n  setMode\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Voice Diary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Lottie, {\n      animationData: voices,\n      className: \"lottie-animation\",\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"api-section homeSection\",\n        onClick: () => {\n          setMode(5);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"thearpyHeading\",\n          children: \"Create a playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"underText\",\n          children: \"Create a personalized playlist based on the contents of your diary note.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatgpt-section homeSection\",\n        onClick: () => {\n          setMode(8);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"diaryHeading\",\n          children: \"Create a song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"underText\",\n          children: \"Create a personalized song based on the contents of your diary note.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = Voices;\nvar _c;\n$RefreshReg$(_c, \"Voices\");","map":{"version":3,"names":["React","voices","Lottie","jsxDEV","_jsxDEV","Voices","setMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","animationData","loop","onClick","_c","$RefreshReg$"],"sources":["/Users/ritessshhh/WebstormProjects/princeton-hackathon/src/Pages/Voices.js"],"sourcesContent":["import React from 'react'\nimport voices from '../Animation/voices.json'\nimport Lottie from \"lottie-react\";\n\nexport default function Voices({setMode}) {\n    return (\n        <div className=\"mainContainer\">\n            <div className=\"header\">\n                <h1>Voice Diary</h1>\n            </div>\n            <Lottie animationData={voices} className='lottie-animation' loop={true}/>\n            <div className=\"content\">\n                <div className=\"api-section homeSection\" onClick={()=>{setMode(5)}}>\n                    <h2 className='thearpyHeading'>Create a playlist</h2>\n                    <p className='underText'>Create a personalized playlist based on the contents of your diary note.</p>\n                </div>\n                <div className=\"chatgpt-section homeSection\" onClick={()=>{setMode(8)}}>\n                    <h2 className='diaryHeading'>Create a song</h2>\n                    <p className='underText'>Create a personalized song based on the contents of your diary note.</p>\n                </div>\n            </div>\n        </div>\n    );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAE;EACtC,oBACIF,OAAA;IAAKG,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BJ,OAAA;MAAKG,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACnBJ,OAAA;QAAAI,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACNR,OAAA,CAACF,MAAM;MAACW,aAAa,EAAEZ,MAAO;MAACM,SAAS,EAAC,kBAAkB;MAACO,IAAI,EAAE;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACzER,OAAA;MAAKG,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACpBJ,OAAA;QAAKG,SAAS,EAAC,yBAAyB;QAACQ,OAAO,EAAEA,CAAA,KAAI;UAACT,OAAO,CAAC,CAAC,CAAC;QAAA,CAAE;QAAAE,QAAA,gBAC/DJ,OAAA;UAAIG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrDR,OAAA;UAAGG,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAwE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpG,CAAC,eACNR,OAAA;QAAKG,SAAS,EAAC,6BAA6B;QAACQ,OAAO,EAAEA,CAAA,KAAI;UAACT,OAAO,CAAC,CAAC,CAAC;QAAA,CAAE;QAAAE,QAAA,gBACnEJ,OAAA;UAAIG,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/CR,OAAA;UAAGG,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAoE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACI,EAAA,GAnBuBX,MAAM;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}